comment: |
  This component handle a login / password form.
  And uses the lib_UserManager
  
  The component will check user / password and if successful will autenticate the user. When the user is authenticated, the component will fire a 'login' event that you can handle with a SubscribeHandler. use this event to close a modal page or to push/root a new page when the user is authenticated
  
  
  
↓Grid [ngx.components.UIDynamicElement-1725791792651]: 
  beanData: '{"ionBean":"Grid","Height":"plain:100%"}'
  tagName: ion-grid
  ↓GridRow [ngx.components.UIDynamicElement-1725791792654]: 
    beanData: '{"ionBean":"GridRow","FlexAlignement":"plain:ion-align-items-stretch"}'
    tagName: ion-row
    ↓GridCol [ngx.components.UIDynamicElement-1725791792660]: 
      beanData: |
        '{
         "ionBean": "GridCol",
         "SizeLg": "plain:6",
         "SizeMd": "plain:6",
         "SizeSm": "plain:12",
         "SizeXl": "plain:6",
         "SizeXs": "plain:12"
        }'
      tagName: ion-col
      ↓Style [ngx.components.UIStyle-1725791792663]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '    background-repeat: no-repeat;
                    background-size: cover;
                    background-position-x: 50%;
                    background-position-y: 50%;
                 	background-image: url(''../../../../../../DisplayObjects/mobile/assets/images/svg/tel/bg.svg'');
                    z-index: auto;
                    position: relative;
                '
      ↓Grid [ngx.components.UIDynamicElement-1725791792666]: 
        beanData: '{"ionBean":"Grid","Height":"plain:100%"}'
        tagName: ion-grid
        ↓GridRow [ngx.components.UIDynamicElement-1725791792669]: 
          beanData: '{"ionBean":"GridRow","Height":"plain:10%"}'
          tagName: ion-row
          ↓Image [ngx.components.UIDynamicElement-1725791792672]: 
            beanData: '{"ionBean":"Image","url":"script:''assets\/images\/svg\/logo\/logo_convertigo_white.png''"}'
            selfClose: true
            tagName: img
            ↓Style [ngx.components.UIStyle-1725791792675]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '    position: absolute;
                          left: 0px;
                          right: 0px;
                          top: 10px;
                          margin: auto;
                      '
        ↓GridRow1 [ngx.components.UIDynamicElement-1725791792678]: 
          beanData: '{"ionBean":"GridRow","Height":"plain:80%"}'
          tagName: ion-row
          ↓Image [ngx.components.UIDynamicElement-1725791792687]: 
            beanData: '{"ionBean":"Image","url":"script:''assets\/images\/svg\/tel\/illus_tel_01.svg''"}'
            selfClose: true
            tagName: img
            ↓Style [ngx.components.UIStyle-1725811225449]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '	margin: auto
                      '
        ↓GridRow2 [ngx.components.UIDynamicElement-1725791792723]: 
          beanData: '{"ionBean":"GridRow","Height":"plain:10%"}'
          tagName: ion-row
          ↓GridCol [ngx.components.UIDynamicElement-1725791792726]: 
            beanData: '{"ionBean":"GridCol","Size":"plain:12"}'
            tagName: ion-col
            ↓Directive [ngx.components.UIControlDirective-1725791792729]: 
              directiveName: If
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:window.screen.width < 768
              ↓FormatLayout [ngx.components.UIDynamicAttr-1725791792732]: 
                beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-center"}'
                comment: FormatLayout
                tagName: div
              ↓Button [ngx.components.UIDynamicElement-1725791792735]: 
                beanData: '{"ionBean":"Button","IonColor":"plain:light"}'
                tagName: ion-button
                ↓Text [ngx.components.UIText-1725791792738]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:Skip
                ↓Style [ngx.components.UIStyle-1725791792741]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '
                            border-radius: 24px;
                            border: solid 1px #ffffff;
                          '
                ↓Event [ngx.components.UIControlEvent-1725791792744]: 
                  ↓setVal [ngx.components.UICustomAction-1725791792747]: 
                    actionValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            		    page["show"] = true;
                            		    resolve();
                            
        ↓Attr [ngx.components.UIAttribute-1725811833561]: 
          attrName: 
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:ion-no-padding
    ↓Directive [ngx.components.UIControlDirective-1725791792750]: 
      directiveName: If
      directiveSource: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:window.screen.width > 767 
      ↓GridCol1 [ngx.components.UIDynamicElement-1725791792753]: 
        beanData: |
          '{
           "ionBean": "GridCol",
           "SizeLg": "plain:6",
           "SizeMd": "plain:6",
           "SizeSm": "plain:12",
           "SizeXl": "plain:6",
           "SizeXs": "plain:12"
          }'
        tagName: ion-col
        ↓Div [ngx.components.UIDynamicElement-1725791792759]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓Style [ngx.components.UIStyle-1725791792762]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '	/*position: absolute;
                     	top: 50%;
                     	height: 50vh !important;
                     	transform: translateY(-50%);
                      	left: 5%; 
                      	right: 5%;*/
                      	
                      	
                    
                     	height:100vh;
                     	display: flex;
                      	margin-left: 5%; 
                      	margin-right: 5%;
                      	display: flex;
                      	flex-direction: column;
                    
                    	justify-content: center;
                      	position : relative;
                      
                      
                    
                    '
          ↓DivTextDescription [ngx.components.UIDynamicElement-1725791792765]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓ImageConvertigo2 [ngx.components.UIDynamicElement-1725791792768]: 
              beanData: '{"ionBean":"Image","url":"script:''assets\/images\/svg\/logo\/logo_no_code_studio.svg''"}'
              selfClose: true
              tagName: img
              ↓Style [ngx.components.UIStyle-1725791792771]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	/*margin-left:0.5em;
                        	margin-right:0.5em;*/
                        	width: 80%;
                        	display:block;
                            margin:auto;
                            max-width:353px;
                        '
            ↓Span [ngx.components.UIDynamicElement-1725791792774]: 
              beanData: '{"ionBean":"SpanTag"}'
              isEnabled: false
              tagName: span
              ↓FormatLayout [ngx.components.UIDynamicAttr-1725791792777]: 
                beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-left"}'
                comment: FormatLayout
                tagName: div
              ↓Style [ngx.components.UIStyle-1725791792780]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        'font-size: 48px;
                        color: #0CBBE7;
                        background: linear-gradient(0.25turn, #0cbbe7, #ff8206);
                        	background-clip: text;
                        	-webkit-text-fill-color: transparent;
                        '
              ↓Text [ngx.components.UIText-1725791792783]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:titleLogin
              ↓FontStyle [ngx.components.UIFontStyle-1725791792786]: 
                fontFamily: Saira
                ruleTargets: class1725791792774
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        'font-family: Saira;
                        '
            ↓Attr [ngx.components.UIAttribute-1725791792789]: 
              attrName: '[ngClass]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:'styledivnormal'
            ↓Style2 [ngx.components.UIStyle-1725791792792]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      	margin-right:0px !important;
                      	margin-left:0px !important;
                      	text-align:center;
                      
            ↓Tag [ngx.components.UIElement-1725791792795]: 
              selfClose: true
              tagName: br
          ↓DivBody [ngx.components.UIDynamicElement-1725791792810]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Form [ngx.components.UIForm-1725791792813]: 
              identifier: form1645091280596
              ↓Event [ngx.components.UIControlEvent-1725791792816]: 
                attrName: (ngSubmit)
                eventName: onSubmit
                ↓Finally_Handler [ngx.components.UIActionFinallyEvent-1725815946903]: 
                  ↓SetGlobal [ngx.components.UIDynamicAction-1725815946906]: 
                    beanData: |
                      '{
                       "ionBean": "SetGlobalAction",
                       "Property": "plain:doingLogin",
                       "Value": "script:false"
                      }'
                ↓IfContinue [ngx.components.UIDynamicIf-1725815946909]: 
                  beanData: '{"ionBean":"IfElseAction","condition":"script:this.local.continue"}'
                  ↓SetGlobal [ngx.components.UIDynamicAction-1725815946912]: 
                    beanData: |
                      '{
                       "ionBean": "SetGlobalAction",
                       "Property": "plain:doingLogin",
                       "Value": "script:true"
                      }'
                  ↓IfAD [ngx.components.UIDynamicIf-1725815946924]: 
                    beanData: '{"ionBean":"IfElseAction","condition":"script:this.local.loginad == true"}'
                    ↓LoginAd [ngx.components.UIDynamicAction-1725815946927]: 
                      beanData: |
                        '{
                         "ionBean": "CallSequenceAction",
                         "requestable": "plain:lib_UserManager.SignInAD",
                         "cachePolicy": "plain:priority_server",
                         "cacheTtl": "plain:99999999999999999999"
                        }'
                      ↓IfElse [ngx.components.UIDynamicIf-1725815946930]: 
                        beanData: '{"ionBean":"IfElseAction","condition":"script:out.ok == ''true''"}'
                      ↓user [ngx.components.UIControlVariable-1725859723804]: 
                        comment: new variable
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:
                      ↓password [ngx.components.UIControlVariable-1725859723806]: 
                        comment: new variable
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:
                    ↓Else_Handler [ngx.components.UIActionElseEvent-1725815946948]: 
                      ↓Login [ngx.components.UIDynamicAction-1725815946951]: 
                        beanData: |
                          '{
                           "ionBean": "CallSequenceAction",
                           "requestable": "plain:lib_UserManager.SignIn",
                           "cachePolicy": "plain:priority_server",
                           "cacheTtl": "plain:99999999999999999999"
                          }'
                        ↓IfElse [ngx.components.UIDynamicIf-1725815946954]: 
                          beanData: '{"ionBean":"IfElseAction","condition":"script:out.ok == ''true''"}'
                        ↓user [ngx.components.UIControlVariable-1725859769022]: 
                          comment: new variable
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:
                        ↓password [ngx.components.UIControlVariable-1725859769024]: 
                          comment: new variable
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:
                  ↓Else_Handler [ngx.components.UIActionElseEvent-1725815946972]: 
                    ↓setContinueTrue [ngx.components.UICustomAction-1725815946975]: 
                      actionValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              		    this.local.continue = true;
                              		    if(!this.local.forceContinue){
                              		        setTimeout(()=>{
                              	                page["pass"].setFocus()
                              	                //page["pass"]._elementRef.nativeElement.focus();
                              	            },50)
                              	            resolve();
                              		    }
                              
              ↓Div [ngx.components.UIDynamicElement-1725791792894]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓email [ngx.components.UIDynamicElement-1725791792897]: 
                  beanData: '{"ionBean":"GenericItem"}'
                  tagName: ion-item
                  ↓Label [ngx.components.UIDynamicElement-1725791792900]: 
                    beanData: |
                      '{
                       "ionBean": "Label",
                       "Position": "plain:fixed",
                       "IconSlot": "plain:start"
                      }'
                    tagName: ion-label
                    ↓Text [ngx.components.UIText-1725791792903]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: 'script:this.local.identifier != undefined ? this.local.identifier : ''email'' | translate'
                    ↓Attr [ngx.components.UIAttribute-1725791792906]: 
                      attrName: 
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:ion-no-padding
                    ↓Style [ngx.components.UIStyle-1725791792909]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '/**
                               * Custom properties (sometimes referred to as CSS variables or cascading variables)
                               * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                               * They are set using custom property notation, e.g.: --main-color: black;
                               * and are accessed using the var() function, e.g.: color: var(--main-color);
                               * You can find below your component''s properties you can customize within the page.
                               * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                               * For more informations see https://ionicframework.com/docs/theming.
                              **/
                              //--color	//Color of the label
                              min-width:106px;
                              '
                  ↓Style [ngx.components.UIStyle-1725791792939]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '	background-color: transparent;
                            '
                  ↓Attr2 [ngx.components.UIAttribute-1725791792942]: 
                    attrName: '[ngClass]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'stylegenerictextnormal'
                    isEnabled: false
                  ↓TextInput [ngx.components.UIDynamicElement-1725791792945]: 
                    beanData: |
                      '{
                       "ionBean": "Input",
                       "ControlName": "plain:email",
                       "DoubleBinding": "script",
                       "Debounce": "plain:0",
                       "Type": "plain:email"
                      }'
                    identifier: email
                    tagName: ion-input
                    ↓Style [ngx.components.UIStyle-1725791792948]: 
                      isEnabled: false
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              'position: static;
                              '
                    ↓Attr [ngx.components.UIAttribute-1725791792951]: 
                      attrName: 
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:autofocus
                    ↓Attr1 [ngx.components.UIAttribute-1725791792954]: 
                      attrName: 
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:ion-no-padding
                  ↓Attr [ngx.components.UIAttribute-1725791792957]: 
                    attrName: 
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:ion-no-padding
                  ↓Attr1 [ngx.components.UIAttribute-1725791792960]: 
                    attrName: '*ngIf'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:!this.local.hideConvertigoLogin
                ↓Style [ngx.components.UIStyle-1725791792966]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          	--margin-right:0px !important;
                          	--margin-left:0px !important;
                          
                ↓divVisibleForLoginButton [ngx.components.UIDynamicElement-1725791792969]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Attr [ngx.components.UIAttribute-1725791792972]: 
                    attrName: '[ngStyle]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: 'script:(this.local.continue || this.local.forceContinue) ? {''display'':''block''} : {''display'':''none''}'
                  ↓password [ngx.components.UIDynamicElement-1725791792975]: 
                    beanData: '{"ionBean":"GenericItem"}'
                    tagName: ion-item
                    ↓Label [ngx.components.UIDynamicElement-1725791792978]: 
                      beanData: |
                        '{
                         "ionBean": "Label",
                         "Position": "plain:fixed",
                         "IconSlot": "plain:start"
                        }'
                      tagName: ion-label
                      ↓Text [ngx.components.UIText-1725791792981]: 
                        i18n: true
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:'password' | translate
                      ↓Style [ngx.components.UIStyle-1725791792984]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '/**
                                 * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                 * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                 * They are set using custom property notation, e.g.: --main-color: black;
                                 * and are accessed using the var() function, e.g.: color: var(--main-color);
                                 * You can find below your component''s properties you can customize within the page.
                                 * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                 * For more informations see https://ionicframework.com/docs/theming.
                                **/
                                //--color	//Color of the label
                                min-width:106px;
                                '
                    ↓TextInput [ngx.components.UIDynamicElement-1725791792987]: 
                      beanData: |
                        '{
                         "ionBean": "Input",
                         "ControlName": "plain:password",
                         "DoubleBinding": "script",
                         "Debounce": "plain:0",
                         "Type": "plain:password"
                        }'
                      identifier: pass
                      tagName: ion-input
                      ↓Attr [ngx.components.UIAttribute-1725791792990]: 
                        attrName: 
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:autofocus
                        isEnabled: false
                      ↓Attr1 [ngx.components.UIAttribute-1725791792993]: 
                        attrName: slot
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:end
                        isEnabled: false
                    ↓Style [ngx.components.UIStyle-1725791792996]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '	background-color: transparent;
                              '
                  ↓AD [ngx.components.UIDynamicElement-1725791793002]: 
                    beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                    tagName: ion-item
                    ↓Label [ngx.components.UIDynamicElement-1725791793005]: 
                      beanData: '{"ionBean":"Label"}'
                      tagName: ion-label
                      ↓Text [ngx.components.UIText-1725791793008]: 
                        i18n: true
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:'login_AD' | translate
                    ↓Style [ngx.components.UIStyle-1725791793011]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '	background-color: transparent;
                              	.item-inner{
                              		border-bottom: unset !important;
                              	}
                              	box-shadow: unset !important;
                              '
                    ↓Attr2 [ngx.components.UIAttribute-1725791793014]: 
                      attrName: '[ngClass]'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:'stylegenerictextnormal'
                      isEnabled: false
                    ↓CheckBox [ngx.components.UIDynamicElement-1725791793017]: 
                      beanData: |
                        '{
                         "ionBean": "CheckBox",
                         "ControlName": "plain:name1645091280788",
                         "DoubleBinding": "script"
                        }'
                      tagName: ion-checkbox
                      ↓Attr [ngx.components.UIAttribute-1725791793020]: 
                        attrName: '[(ngModel)]'
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.local.loginad
                      ↓Event [ngx.components.UIControlEvent-1725791793023]: 
                        attrName: (ngModelChange)
                        eventName: (ngModelChange)
                        ↓CustomAction [ngx.components.UICustomAction-1725791793026]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  		this.local.loginad = event;
                                  		window["localStorage"]["setItem"]('__c8o_forms__loginad', event);
                                  
                                  		resolve();
                                  
                    ↓Attr [ngx.components.UIAttribute-1725791793029]: 
                      attrName: '*ngIf'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:this.local.ad == true
                  ↓SubmitButton2 [ngx.components.UIDynamicElement-1725859416501]: 
                    beanData: '{"ionBean":"SubmitButton"}'
                    tagName: ion-button
                    ↓Text1 [ngx.components.UIText-1725791793038]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:'login' | translate
                ↓divVisibleForContinueButton [ngx.components.UIDynamicElement-1725791793044]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Attr [ngx.components.UIAttribute-1725791793047]: 
                    attrName: '[ngStyle]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: 'script:(!(this.local.continue || this.local.forceContinue)) ? {''display'':''block''} : {''display'':''none''}'
                  ↓FormatLayout [ngx.components.UIDynamicAttr-1725791793050]: 
                    beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-center"}'
                    comment: FormatLayout
                    tagName: div
                  ↓SubmitButton1 [ngx.components.UIDynamicElement-1725815646960]: 
                    beanData: '{"ionBean":"SubmitButton"}'
                    tagName: ion-button
                    ↓Text [ngx.components.UIText-1725815741106]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:Continue
                    ↓Style [ngx.components.UIStyle-1725791793056]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '	--border-radius: 24px;
                              	min-width:287px !important;
                              	margin-top: 30px;
                              '
                  ↓Attr1 [ngx.components.UIAttribute-1725791793065]: 
                    attrName: '*ngIf'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:!this.local.hideConvertigoLogin
              ↓Style [ngx.components.UIStyle-1725791793068]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	ion-item {
                        	  --padding-start: 0px;
                        	}
                        '
            ↓Style [ngx.components.UIStyle-1725791793071]: 
            ↓Directive [ngx.components.UIControlDirective-1725791793074]: 
              directiveName: If
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:!this.local.forceContinue && ( this.local.google == true || this.local.xsoft == true || this.local.linkedin == true)
              ↓FormatLayout [ngx.components.UIDynamicAttr-1725791793077]: 
                beanData: |
                  '{
                   "ionBean": "FormatLayout",
                   "TextAlignment": "plain:ion-text-center",
                   "TextTransformation": "plain:ion-text-uppercase"
                  }'
                comment: FormatLayout
                tagName: div
              ↓FormatLayout1 [ngx.components.UIDynamicAttr-1725791793080]: 
                beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-center"}'
                comment: FormatLayout
                tagName: div
              ↓Div [ngx.components.UIDynamicElement-1725791793083]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Text [ngx.components.UIText-1725791793086]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:or
                ↓FormatLayout [ngx.components.UIDynamicAttr-1725791793089]: 
                  beanData: |
                    '{
                     "ionBean": "FormatLayout",
                     "TextAlignment": "plain:ion-text-center",
                     "TextTransformation": "plain:ion-text-uppercase"
                    }'
                  selfClose: false
                ↓Attr1 [ngx.components.UIAttribute-1725791793092]: 
                  attrName: '*ngIf'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:!this.local.hideConvertigoLogin
              ↓FormatLayout2 [ngx.components.UIDynamicAttr-1725791793095]: 
                beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-center"}'
                comment: FormatLayout
                tagName: div
              ↓Div1 [ngx.components.UIDynamicElement-1725791793098]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Attr1 [ngx.components.UIAttribute-1725791793101]: 
                  attrName: '*ngIf'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:this.local.hideConvertigoLogin
                ↓Style [ngx.components.UIStyle-1725791793104]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          	margin-top:20px;
                          
              ↓DivLoginGoogle [ngx.components.UIDynamicElement-1725791793107]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓ButtonGoogle [ngx.components.UIDynamicElement-1725791793110]: 
                  beanData: |
                    '{
                     "ionBean": "Button",
                     "IonColor": "plain:light",
                     "IconSlot": "plain:start"
                    }'
                  tagName: ion-button
                  ↓Style [ngx.components.UIStyle-1725791793113]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '/**
                             * Custom properties (sometimes referred to as CSS variables or cascading variables)
                             * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                             * They are set using custom property notation, e.g.: --main-color: black;
                             * and are accessed using the var() function, e.g.: color: var(--main-color);
                             * You can find below your component''s properties you can customize within the page.
                             * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                             * For more informations see https://ionicframework.com/docs/theming.
                            **/
                            //--background	//Background of the button
                            //--background-activated	//Background of the button when pressed. Note: setting this will interfere with the Material Design ripple
                            //--background-activated-opacity	//Opacity of the button when pressed
                            //--background-focused	//Background of the button when focused with the tab key
                            //--background-focused-opacity	//Opacity of the button when focused with the tab key
                            //--background-hover	//Background of the button on hover
                            //--background-hover-opacity	//Opacity of the background on hover
                            //--border-color	//Border color of the button
                            //--border-radius	//Border radius of the button
                            //--border-style	//Border style of the button
                            //--border-width	//Border width of the button
                            //--box-shadow	//Box shadow of the button
                            //--color	//Text color of the button
                            //--color-activated	//Text color of the button when pressed
                            //--color-focused	//Text color of the button when focused with the tab key
                            //--color-hover	//Text color of the button when hover
                            //--opacity	//Opacity of the button
                            //--padding-bottom	//Bottom padding of the button
                            //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button
                            //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button
                            //--padding-top	//Top padding of the button
                            //--ripple-color	//Color of the button ripple effect
                            //--transition	//Transition of the button
                            min-width:287px !important;
                            --border-radius: 24px;
                            '
                  ↓Event [ngx.components.UIControlEvent-1725791793116]: 
                    ↓Finally_Handler [ngx.components.UIActionFinallyEvent-1725791793119]: 
                      ↓SetGlobal [ngx.components.UIDynamicAction-1725791793122]: 
                        beanData: |
                          '{
                           "ionBean": "SetGlobalAction",
                           "Property": "plain:doingLogin",
                           "Value": "script:false"
                          }'
                    ↓SetGlobal [ngx.components.UIDynamicAction-1725791793125]: 
                      beanData: |
                        '{
                         "ionBean": "SetGlobalAction",
                         "Property": "plain:doingLogin",
                         "Value": "script:true"
                        }'
                    ↓OAuthLogin [ngx.components.UIDynamicAction-1725791793128]: 
                      beanData: |
                        '{
                         "ionBean": "OAuthLoginAction",
                         "provider": "plain:openid",
                         "clientid": "source:{\"filter\":\"Sequence\",\"project\":\"C8Oforms\",\"input\":\"\",\"model\":{\"data\":[{\"sequence\":\"lib_OAuth.GetOAuthCredentials\",\"marker\":\"\"}],\"path\":\"?.GoogleClientID\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                         "scope": "plain:openid https:\/\/www.googleapis.com\/auth\/userinfo.email https:\/\/www.googleapis.com\/auth\/userinfo.profile",
                         "response_type": "plain:code",
                         "loginRequestable": "plain:lib_OAuth.loginGoogleWithCode",
                         "checkAccessTokenRequestable": "plain:lib_OAuth.checkAccessTokenGoogle",
                         "authorization_endpoint": "plain:https:\/\/accounts.google.com\/o\/oauth2\/v2\/auth",
                         "callbackurl": "plain:https:\/\/c8ocloud.convertigo.net\/convertigo\/projects\/lib_OAuth\/getTokenGoogle.html"
                        }'
                      ↓If [ngx.components.UIDynamicAction-1725791793131]: 
                        beanData: '{"ionBean":"IfAction","condition":"script:parent.out.decodedToken != undefined"}'
                  ↓Icon [ngx.components.UIDynamicElement-1725791793173]: 
                    beanData: |
                      '{
                       "ionBean": "Icon",
                       "IconSlot": "plain:start",
                       "IconSource": "plain:assets\/images\/svg\/login\/google-logo.svg"
                      }'
                    tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1725791793176]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '	margin-right: 12px;
                              '
                  ↓Label [ngx.components.UIDynamicElement-1725791793179]: 
                    beanData: '{"ionBean":"Label","IconSlot":"plain:end"}'
                    tagName: ion-label
                    ↓Text [ngx.components.UIText-1725791793182]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:Continue with Google
                ↓FormatLayout [ngx.components.UIDynamicAttr-1725791793185]: 
                  beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-center"}'
                  selfClose: false
                ↓Style [ngx.components.UIStyle-1725791793188]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'ion-button{
                            span{
                              text-align:left;
                              width:100%;
                            }
                          }
                          '
                ↓Attr [ngx.components.UIAttribute-1725791793191]: 
                  attrName: '*ngIf'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:this.local.google == true
              ↓DivLoginXsoft [ngx.components.UIDynamicElement-1725791793194]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓ButtonXsoft [ngx.components.UIDynamicElement-1725791793197]: 
                  beanData: '{"ionBean":"Button","IonColor":"plain:light"}'
                  tagName: ion-button
                  ↓Label [ngx.components.UIDynamicElement-1725791793200]: 
                    beanData: '{"ionBean":"Label","IconSlot":"plain:end"}'
                    tagName: ion-label
                    ↓Text1 [ngx.components.UIText-1725791793203]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:Continue with Microsoft
                  ↓Icon [ngx.components.UIDynamicElement-1725791793206]: 
                    beanData: |
                      '{
                       "ionBean": "Icon",
                       "IconSlot": "plain:start",
                       "IconSource": "plain:assets\/images\/svg\/login\/microsoft-logo.svg"
                      }'
                    tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1725791793209]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '	margin-right: 12px;
                              '
                  ↓Style [ngx.components.UIStyle-1725791793212]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '/**
                             * Custom properties (sometimes referred to as CSS variables or cascading variables)
                             * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                             * They are set using custom property notation, e.g.: --main-color: black;
                             * and are accessed using the var() function, e.g.: color: var(--main-color);
                             * You can find below your component''s properties you can customize within the page.
                             * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                             * For more informations see https://ionicframework.com/docs/theming.
                            **/
                            //--background	//Background of the button
                            //--background-activated	//Background of the button when pressed. Note: setting this will interfere with the Material Design ripple
                            //--background-activated-opacity	//Opacity of the button when pressed
                            //--background-focused	//Background of the button when focused with the tab key
                            //--background-focused-opacity	//Opacity of the button when focused with the tab key
                            //--background-hover	//Background of the button on hover
                            //--background-hover-opacity	//Opacity of the background on hover
                            //--border-color	//Border color of the button
                            //--border-radius	//Border radius of the button
                            //--border-style	//Border style of the button
                            //--border-width	//Border width of the button
                            //--box-shadow	//Box shadow of the button
                            //--color	//Text color of the button
                            //--color-activated	//Text color of the button when pressed
                            //--color-focused	//Text color of the button when focused with the tab key
                            //--color-hover	//Text color of the button when hover
                            //--opacity	//Opacity of the button
                            //--padding-bottom	//Bottom padding of the button
                            //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button
                            //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button
                            //--padding-top	//Top padding of the button
                            //--ripple-color	//Color of the button ripple effect
                            //--transition	//Transition of the button
                            	font-family: "Roboto";
                            	--border-radius: 24px;
                            	min-width:287px !important;
                            '
                  ↓Event [ngx.components.UIControlEvent-1725791793215]: 
                    ↓Finally_Handler [ngx.components.UIActionFinallyEvent-1725791793218]: 
                      ↓SetGlobal [ngx.components.UIDynamicAction-1725791793221]: 
                        beanData: |
                          '{
                           "ionBean": "SetGlobalAction",
                           "Property": "plain:doingLogin",
                           "Value": "script:false"
                          }'
                    ↓SetGlobal [ngx.components.UIDynamicAction-1725791793224]: 
                      beanData: |
                        '{
                         "ionBean": "SetGlobalAction",
                         "Property": "plain:doingLogin",
                         "Value": "script:true"
                        }'
                    ↓OAuthLogin [ngx.components.UIDynamicAction-1725791793227]: 
                      beanData: |
                        '{
                         "ionBean": "OAuthLoginAction",
                         "clientid": "source:{\"filter\":\"Sequence\",\"project\":\"C8Oforms\",\"input\":\"listen([''lib_OAuth.GetOAuthCredentials''])?.AzureAdClientID\",\"model\":{\"data\":[{\"sequence\":\"lib_OAuth.GetOAuthCredentials\",\"marker\":\"\"}],\"path\":\"?.AzureAdClientID\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                         "callbackurl": "plain:https:\/\/c8ocloud.convertigo.net\/convertigo\/projects\/lib_OAuth\/getToken.html"
                        }'
                      ↓CustomAction [ngx.components.UICustomAction-1725791793230]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		console.log(props.parent.out);
                                		resolve();
                                
                      ↓If [ngx.components.UIDynamicAction-1725791793233]: 
                        beanData: '{"ionBean":"IfAction","condition":"script:parent.out.login == ''ok''"}'
                ↓FormatLayout [ngx.components.UIDynamicAttr-1725791793272]: 
                  beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-center"}'
                  selfClose: false
                ↓Attr [ngx.components.UIAttribute-1725791793275]: 
                  attrName: '*ngIf'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:this.local.xsoft == true
              ↓DivLoginLinkedin [ngx.components.UIDynamicElement-1725791793278]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓ButtonLinkedin [ngx.components.UIDynamicElement-1725791793281]: 
                  beanData: '{"ionBean":"Button","IonColor":"plain:light"}'
                  tagName: ion-button
                  ↓Icon [ngx.components.UIDynamicElement-1725791793284]: 
                    beanData: |
                      '{
                       "ionBean": "Icon",
                       "IconSlot": "plain:start",
                       "IconSource": "plain:assets\/images\/svg\/login\/linkedin-logo.svg"
                      }'
                    tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1725791793287]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '	margin-right: 12px;
                              '
                  ↓Style [ngx.components.UIStyle-1725791793290]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '/**
                             * Custom properties (sometimes referred to as CSS variables or cascading variables)
                             * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                             * They are set using custom property notation, e.g.: --main-color: black;
                             * and are accessed using the var() function, e.g.: color: var(--main-color);
                             * You can find below your component''s properties you can customize within the page.
                             * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                             * For more informations see https://ionicframework.com/docs/theming.
                            **/
                            //--background	//Background of the button
                            //--background-activated	//Background of the button when pressed. Note: setting this will interfere with the Material Design ripple
                            //--background-activated-opacity	//Opacity of the button when pressed
                            //--background-focused	//Background of the button when focused with the tab key
                            //--background-focused-opacity	//Opacity of the button when focused with the tab key
                            //--background-hover	//Background of the button on hover
                            //--background-hover-opacity	//Opacity of the background on hover
                            //--border-color	//Border color of the button
                            //--border-radius	//Border radius of the button
                            //--border-style	//Border style of the button
                            //--border-width	//Border width of the button
                            //--box-shadow	//Box shadow of the button
                            //--color	//Text color of the button
                            //--color-activated	//Text color of the button when pressed
                            //--color-focused	//Text color of the button when focused with the tab key
                            //--color-hover	//Text color of the button when hover
                            //--opacity	//Opacity of the button
                            //--padding-bottom	//Bottom padding of the button
                            //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button
                            //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button
                            //--padding-top	//Top padding of the button
                            //--ripple-color	//Color of the button ripple effect
                            //--transition	//Transition of the button
                            	font-family: "Roboto";
                            	--border-radius: 24px;
                            	min-width:287px !important;
                            '
                  ↓Event [ngx.components.UIControlEvent-1725791793293]: 
                    ↓Finally_Handler [ngx.components.UIActionFinallyEvent-1725791793296]: 
                      ↓SetGlobal [ngx.components.UIDynamicAction-1725791793299]: 
                        beanData: |
                          '{
                           "ionBean": "SetGlobalAction",
                           "Property": "plain:doingLogin",
                           "Value": "script:false"
                          }'
                    ↓SetGlobal [ngx.components.UIDynamicAction-1725791793302]: 
                      beanData: |
                        '{
                         "ionBean": "SetGlobalAction",
                         "Property": "plain:doingLogin",
                         "Value": "script:true"
                        }'
                    ↓OAuthLogin [ngx.components.UIDynamicAction-1725791793305]: 
                      beanData: |
                        '{
                         "ionBean": "OAuthLoginAction",
                         "provider": "plain:linkedin",
                         "clientid": "source:{\"filter\":\"Sequence\",\"project\":\"C8Oforms\",\"input\":\"listen([''lib_OAuth.GetOAuthCredentials''])?.AzureAdClientID\",\"model\":{\"data\":[{\"sequence\":\"lib_OAuth.GetOAuthCredentials\",\"marker\":\"\"}],\"path\":\"?.LinkedInClientID\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                         "scope": "plain:r_liteprofile r_emailaddress",
                         "callbackurl": "plain:https:\/\/c8ocloud.convertigo.net\/convertigo\/projects\/lib_OAuth\/getTokenLinkedIn.html"
                        }'
                      ↓If [ngx.components.UIDynamicAction-1725791793308]: 
                        beanData: '{"ionBean":"IfAction","condition":"script:parent.out.login == ''ok''"}'
                        ↓CallSequence [ngx.components.UIDynamicAction-1725791793311]: 
                          beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:C8Oforms.LoginLinkedIn"}'
                          ↓lang [ngx.components.UIControlVariable-1725791793314]: 
                            comment: new variable
                            varValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:this.global['__secretL']
                          ↓IfElse [ngx.components.UIDynamicIf-1725791793317]: 
                            beanData: '{"ionBean":"IfElseAction","condition":"script:out.ok == ''true''"}'
                          ↓decodedToken [ngx.components.UIControlVariable-1725791793335]: 
                            comment: new variable
                            varValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: source:{"filter":"Action","project":"C8Oforms","input":"","model":{"data":[{"priority":1725791793305}],"path":"?.out","prefix":"","suffix":"?.AuthUser","custom":"","useCustom":false}}
                          ↓name [ngx.components.UIControlVariable-1725791793338]: 
                            comment: new variable
                            varValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: source:{"filter":"Action","project":"C8Oforms","input":"","model":{"data":[{"priority":1725791793305}],"path":"?.out","prefix":"","suffix":"?.currentObject?.localizedFirstName","custom":"","useCustom":false}}
                          ↓surname [ngx.components.UIControlVariable-1725791793341]: 
                            comment: new variable
                            varValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: source:{"filter":"Action","project":"C8Oforms","input":"","model":{"data":[{"priority":1725791793305}],"path":"?.out","prefix":"","suffix":"?.currentObject?.localizedLastName","custom":"","useCustom":false}}
                          ↓displayName [ngx.components.UIControlVariable-1725791793344]: 
                            comment: new variable
                            varValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: source:{"filter":"Action","project":"C8Oforms","input":"","model":{"data":[{"priority":1725791793305}],"path":"?.out","prefix":"","suffix":"?.currentObject?.localizedFirstName + ' ' + ","custom":"stack['1725791793305']?.out?.currentObject?.localizedFirstName + ' ' + stack['1725791793305']?.out?.currentObject?.localizedLastName","useCustom":true}}
                          ↓mail [ngx.components.UIControlVariable-1725791793347]: 
                            comment: new variable
                            varValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: source:{"filter":"Action","project":"C8Oforms","input":"","model":{"data":[{"priority":1725791793305}],"path":"?.out","prefix":"","suffix":"?.emailAddress","custom":"","useCustom":false}}
                  ↓Label [ngx.components.UIDynamicElement-1725791793353]: 
                    beanData: '{"ionBean":"Label","IconSlot":"plain:end"}'
                    tagName: ion-label
                    ↓Text [ngx.components.UIText-1725791793356]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:Continue_with_LinkedIn
                ↓FormatLayout [ngx.components.UIDynamicAttr-1725791793359]: 
                  beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-center"}'
                  selfClose: false
                ↓Attr [ngx.components.UIAttribute-1725791793362]: 
                  attrName: '*ngIf'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:this.local.linkedin == true
          ↓DividerPasswordLost [ngx.components.UIDynamicElement-1725791793365]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Style [ngx.components.UIStyle-1725791793368]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '	border-top: 1px solid #cecece;
                      	margin-left: auto;
                        	margin-right: auto;
                        	margin-top:20px;
                        	
                      	max-width:253px !important;
                      '
            ↓FormatLayout [ngx.components.UIDynamicAttr-1725791793371]: 
              beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-center"}'
              comment: FormatLayout
              tagName: div
            ↓Tag [ngx.components.UIElement-1725791793374]: 
              tagName: a
              ↓Paragraph [ngx.components.UIDynamicElement-1725791793377]: 
                beanData: '{"ionBean":"Paragraph"}'
                tagName: p
                ↓Text [ngx.components.UIText-1725791793380]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'forgotPassword' | translate
              ↓Style [ngx.components.UIStyle-1725791793383]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '/* Mot de passe oublié: */
                        font-family: Helvetica;
                        font-size: 12px;
                        color: #048EAE;
                        
                        }
                        .class1603722110002:hover{
                        	cursor:pointer;
                        '
              ↓Event [ngx.components.UIControlEvent-1725791793386]: 
                ↓ModalPage [ngx.components.UIDynamicAction-1725791793389]: 
                  beanData: |
                    '{
                     "ionBean": "ModalAction",
                     "page": "plain:lib_UserManager.MobileApplication.Application.ForgotPasswordPage",
                     "cssClass": "plain:alwaysFullScreen"
                    }'
            ↓Style1 [ngx.components.UIStyle-1725791793392]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      padding-bottom:20px;
                      
            ↓Attr [ngx.components.UIAttribute-1725791793395]: 
              attrName: '*ngIf'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:!this.local.hidePasswordForgotten
          ↓FormatLayout [ngx.components.UIDynamicAttr-1725791793398]: 
            beanData: |
              '{
               "ionBean": "FormatLayout",
               "FlexContainerAlignment": "plain:ion-justify-content-center",
               "FlexItemAlignment": "plain:ion-align-self-auto"
              }'
            selfClose: false
        ↓DivMenuVersion [ngx.components.UIDynamicElement-1725791793401]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓Style [ngx.components.UIStyle-1725791793404]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '	position: absolute;
                        bottom: 0px;
                       
                    	float:right;
                    	padding-right: 10px;
                    	right:0;
                    '
          ↓DivMenuVersion [ngx.components.UIDynamicElement-1725791793407]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Style [ngx.components.UIStyle-1725791793410]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '	//bottom: 0 !important;
                      
                      	
                      '
↓SharedComponent_Event [ngx.components.UISharedComponentEvent-1725860714166]: 
  ↓CallSequence [ngx.components.UIDynamicAction-1725860733421]: 
    beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:lib_OAuth.GetOAuthCredentials"}'
    ↓ComputeSSOLoginsToEnable [ngx.components.UICustomAction-1725860809222]: 
      actionValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              '		page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
              		page.local.google = true
              		page.local.xsoft = true
              		page.local.linkedin = true
              		resolve();
              '